<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>posts on Mildly Journaling</title>
    <link>https://www.mildlyjournaling.com/posts/</link>
    <description>Recent content in posts on Mildly Journaling</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 05 Mar 2025 20:31:42 -0800</lastBuildDate>
    <atom:link href="https://www.mildlyjournaling.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reading &#34;an Interview With Benedict Evans About Ai Unknowns&#34;</title>
      <link>https://www.mildlyjournaling.com/posts/reading-stratechery-an-interview-with-benedict-evans-about-ai-unknowns/</link>
      <pubDate>Wed, 05 Mar 2025 20:31:42 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/reading-stratechery-an-interview-with-benedict-evans-about-ai-unknowns/</guid>
      <description>&lt;p&gt;From &lt;a href=&#34;https://stratechery.com/2025/an-interview-with-benedict-evans-about-ai-unknowns/&#34;&gt;Stratechery&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;BE: This is a much bigger deal if you’re in the accounting industry than if you’re in the cement industry.&lt;/p&gt;&#xA;&lt;p&gt;It’s a great thing if you’re in the cement industry, data centers need foundations.&lt;/p&gt;&#xA;&lt;p&gt;BE: Well, if you’re in the cement industry, this probably means you’re using new software.&lt;/p&gt;&#xA;&lt;p&gt;Yep.&lt;/p&gt;&#xA;&lt;p&gt;BE: If you’re in the accounting industry, this changes the whole nature of your industry, so that’s one observation.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Evans (i.e. BE) is talking about the impact of AI softwares over different industries - huge for accounting industry but little for the cement industry.&lt;/p&gt;&#xA;&lt;p&gt;The conversation is pertinent to me, as someone works in the tech industry, where AI impact is probably among the most - just look at numerous stories of people using AI coding agents to build working softwares without the help of developers at all. How to survive the wave of AI?&lt;/p&gt;&#xA;&lt;p&gt;The answer seem to be starting a side business in an industry or sector that are intrinsically resilient towards AI. Now it is probably not feasible for me to get into cement industry, but generally businesses that built around physical goods/locations or people could be promising: physical shop owner, fitness trainer, landlord, blue collar jobs etc. AI is not likely able to replace any of them in the near future. On the contrary, it is possible to even leverage AI to improve the business.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Investment Update - January 2025</title>
      <link>https://www.mildlyjournaling.com/posts/investment-update-01-2025/</link>
      <pubDate>Sat, 01 Mar 2025 14:57:58 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/investment-update-01-2025/</guid>
      <description>&lt;p&gt;This is our monthly update on the family fund’s investment performance for January 2025. It highlights this month’s changes, with a full month-over-month trend analysis coming soon as a separate page.&lt;/p&gt;&#xA;&lt;p&gt;This first update is longer than usual, as it explains the &amp;ldquo;why&amp;rdquo; and &amp;ldquo;how&amp;rdquo; behind it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-writing-this-update&#34;&gt;Why writing this update&lt;/h2&gt;&#xA;&lt;p&gt;For years, we’ve casually traded stocks with our family fund, like typical retail traders. Honestly, we’re not great at it—our results just follow the market, and we’ve only tracked them through tax returns. Still, managing our money well matters to us.&lt;/p&gt;&#xA;&lt;p&gt;We think regular updates will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Show how our money’s doing (it’s not a lot, but it matters to us)&lt;/li&gt;&#xA;&lt;li&gt;Sharpen our trading skills by reviewing changes and trades&lt;/li&gt;&#xA;&lt;li&gt;Keep us focused on this as a family priority&lt;/li&gt;&#xA;&lt;li&gt;May spark helpful online feedback&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;what-does-the-update-include&#34;&gt;What does the update include&lt;/h2&gt;&#xA;&lt;p&gt;Our fund mixes 401(k) contributions—a U.S. employer-sponsored retirement plan with pre-tax, tax-deferred growth—and after-tax money once the 401(k) is maxed out. Our 401(k) is mostly in retirement fund and US market index fund. With after-tax funds, we trade individual stocks, index funds, crypto, and also use robo-investing for a part of it (automated, low-fee portfolio management). We’re curious to compare robo-investing’s results to our manual investment.&lt;/p&gt;&#xA;&lt;p&gt;We report normalized values, with the starting point of total value being 100 (as of 01/01/2025), not actual dollars, for privacy reasons.&lt;/p&gt;&#xA;&lt;p&gt;We’re shifting from heavy individual stock holdings to mostly U.S. index funds for long-term growth and low fees. We’ll keep some stocks for long-term gains and a small chunk for short-term trading. The updates won&amp;rsquo;t detail these breakdowns until they stabilize—numbers jump too much otherwise, making updates meaningless.&lt;/p&gt;&#xA;&lt;p&gt;In this first update, we report the value change and growth of the total asset and some high level breakdowns. We will add more in the future update.&lt;/p&gt;&#xA;&lt;h2 id=&#34;january-update&#34;&gt;January update&lt;/h2&gt;&#xA;&lt;p&gt;Overall, January is a good month. The total value grows to 104.85 by the end of the month. After tax portion grows slightly higher than 401(k), largely because the stock market outperforms in January. Below is the detailed growth rate:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Name&lt;/th&gt;&#xA;          &lt;th&gt;Growth rate (%)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Total asset&lt;/td&gt;&#xA;          &lt;td&gt;3.02&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;After tax&lt;/td&gt;&#xA;          &lt;td&gt;3.07&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;401(k)&lt;/td&gt;&#xA;          &lt;td&gt;2.89&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;</description>
    </item>
    <item>
      <title>Reading Stratechery analysis on Netflix Earnings Q4 2024</title>
      <link>https://www.mildlyjournaling.com/posts/stratechery-netflix-earnings-q4-24/</link>
      <pubDate>Mon, 24 Feb 2025 21:28:37 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/stratechery-netflix-earnings-q4-24/</guid>
      <description>&lt;p&gt;From &lt;a href=&#34;https://stratechery.com/2025/encryption-and-the-uneasy-compromise-netflix-earnings-the-aggregators-compounding-advantage/&#34;&gt;Stratechery&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;While I don’t think Netflix planned it this way, it is quite the flex to report record subscriber ads in the last quarter where they will report that number as a matter of course. I thought the reporting change was reasonable, but I also thought that part of the reason for the reporting change was because the password-sharing crackdown represented the last big growth surge. I guess not!&lt;/p&gt;&#xA;&lt;p&gt;Netflix executives on the earnings call strongly disagreed with an analyst who assumed that the Mike Tyson-Jake Paul boxing event and Christmas Day NFL games were the primary drivers of that subscriber growth, crediting them with only “a small minority of our total member acquisition in the quarter”; that said, executives also spoke very positively about the events and that they would do more.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Neither password crackdown nor live stream events are the main driver of the subscriber growth, the growth is organic then?&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This makes total sense, and is a worthy extension of Aggregation Theory. Specifically, while more subscribers means that Netflix can spend more on content, thus attracting more subscribers, more content also means that Netflix can drive more engagement on a per-customer basis — there’s just more to watch! This, in Netflix’s case, provides “permission” to raise prices&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;The benefit of being an aggregator, for Netflix, is having both pricing power and buying power.&lt;/p&gt;&#xA;&lt;p&gt;pricing power:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;having the largest subscriber base means it needs less revenue per subscriber to achieve the same revenue&lt;/li&gt;&#xA;&lt;li&gt;Netflix is indeed getting less revenue per subscriber compared with other streaming competitors&lt;/li&gt;&#xA;&lt;li&gt;as a result, Netflix has more room to increase its subscription fee&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;buying power:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;having the largest subscriber base means it can spread the content cost to more subscribers&lt;/li&gt;&#xA;&lt;li&gt;Netflix is indeed having the lowest content spend per subscriber compared with other streaming competitors&lt;/li&gt;&#xA;&lt;li&gt;as a result, Netflix can afford to spend more on content&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;These two form a virtuous cycle.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Adding an RSS Feed to My Site</title>
      <link>https://www.mildlyjournaling.com/posts/add-rss-to-my-site/</link>
      <pubDate>Sat, 22 Feb 2025 20:37:30 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/add-rss-to-my-site/</guid>
      <description>&lt;p&gt;I recently decided to add an RSS feed to my Hugo website. While it seemed straightforward at first, I ran into several gotchas that taught me more about Hugo&amp;rsquo;s RSS system than I expected to learn.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-simple-solution-that-wasnt-quite-right&#34;&gt;The simple solution that wasn&amp;rsquo;t quite right&lt;/h2&gt;&#xA;&lt;p&gt;My Hugo theme, Paper, advertises built-in RSS support. I initially tried their &lt;a href=&#34;https://github.com/nanxiaobei/hugo-paper?tab=readme-ov-file#options&#34;&gt;default RSS configuration&lt;/a&gt;, but it had two problems:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The feed only included snippets of each post instead of the full content. This meant subscribers had to click through to my site to read complete articles.&lt;/li&gt;&#xA;&lt;li&gt;The feed included everything from my website, including non-article pages like my About page. I wanted the feed to focus only on my blog posts.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I could have lived with these limitations, but I prefer to give my readers the best possible experience. For me, that means allowing them to read full articles directly in their RSS reader.&lt;/p&gt;&#xA;&lt;h2 id=&#34;creating-a-custom-rss-template&#34;&gt;Creating a custom RSS template&lt;/h2&gt;&#xA;&lt;p&gt;To fix these issues, I needed to create my own RSS template. Hugo&amp;rsquo;s &lt;a href=&#34;https://gohugo.io/templates/rss/&#34;&gt;RSS documentation&lt;/a&gt; pointed me to their &lt;a href=&#34;https://github.com/gohugoio/hugo/blob/master/tpl/tplimpl/embedded/templates/_default/rss.xml&#34;&gt;default RSS template&lt;/a&gt;, which I could use as a starting point.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s where I learned something interesting about Hugo: it has two different types of RSS feeds. There&amp;rsquo;s a &amp;ldquo;home&amp;rdquo; feed that includes all content and a &amp;ldquo;section&amp;rdquo; feed that only includes content from a specific section of your site.&lt;/p&gt;&#xA;&lt;p&gt;Since I wanted my feed to include only blog posts, I created a template called &lt;code&gt;section.rss.xml&lt;/code&gt; rather than &lt;code&gt;home.rss.xml&lt;/code&gt;. This tells Hugo to generate the feed only for my &amp;ldquo;posts&amp;rdquo; section.&lt;/p&gt;&#xA;&lt;p&gt;The modification to include full content instead of snippets was surprisingly simple. I just had to change one line in the template:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;{% raw %}{{ .Content | transform.XMLEscape | safeHTML }}{% endraw %}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The key change was replacing &lt;code&gt;.Summary&lt;/code&gt; with &lt;code&gt;.Content&lt;/code&gt;. This tells Hugo to include the complete article text in the feed instead of just a preview.&lt;/p&gt;&#xA;&lt;h2 id=&#34;an-unexpected-build-failure&#34;&gt;An unexpected build failure&lt;/h2&gt;&#xA;&lt;p&gt;Just when I thought I was done, Cloudflare Pages refused to build my site. The error message was cryptic:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Error: can&amp;#39;t evaluate field XMLEscape in type interface {}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After some digging, I discovered that the &lt;code&gt;XMLEscape&lt;/code&gt; function I was using wasn&amp;rsquo;t available in the version of Hugo (v0.118.2) that Cloudflare Pages was using. The function was only added in Hugo v0.121.0.&lt;/p&gt;&#xA;&lt;p&gt;Fortunately, Cloudflare Pages lets you &lt;a href=&#34;https://developers.cloudflare.com/pages/framework-guides/deploy-a-hugo-site/#use-a-specific-or-newer-hugo-version&#34;&gt;specify which Hugo version to use&lt;/a&gt;. I added this to my build configuration &lt;code&gt;HUGO_VERSION = &amp;quot;v0.144.2&amp;quot;&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;one-last-tweak-fixing-the-rss-icon&#34;&gt;One last tweak: fixing the RSS icon&lt;/h2&gt;&#xA;&lt;p&gt;With the build working, I noticed one final issue: the RSS icon in my site&amp;rsquo;s header still pointed to the home feed (&lt;code&gt;/index.xml&lt;/code&gt;) instead of my new section feed (&lt;code&gt;/posts/index.xml&lt;/code&gt;).&lt;/p&gt;&#xA;&lt;p&gt;To fix this, I needed to override the theme&amp;rsquo;s header template. I copied the theme&amp;rsquo;s &lt;code&gt;layouts/partials/header.html&lt;/code&gt; to my site and modified the RSS link from &lt;code&gt;index.xml&lt;/code&gt; to &lt;code&gt;posts/index.xml&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;href=&amp;#34;{{ if eq . `rss` }}&#xA;        {{ `posts/index.xml` | absURL }} &amp;lt;--- change this line&#xA;      {{ else if eq . `mastodon` }}&#xA;        {{ index site.Params . }}&#xA;      {{ else }}&#xA;        {{ if eq . `threads` }}&#xA;          https://threads.net/&#xA;        {{ else if eq . `bluesky` }}&#xA;          https://bsky.app/profile/&#xA;          {{ else }}&#xA;            https://{{ . }}.com/&#xA;          {{ if eq . `linkedin` }}&#xA;            in/&#xA;          {{ end }}&#xA;        {{ end }}&#xA;        {{ index site.Params . }}&#xA;      {{ end }}&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This way, it generates the URL to be &lt;code&gt;{my-website-url}/posts/index.xml&lt;/code&gt;, instead of &lt;code&gt;{my-website-url}/index.xml&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-end-result&#34;&gt;The end result&lt;/h2&gt;&#xA;&lt;p&gt;After these changes, my site now has exactly the RSS feed I wanted:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Full article content in the feed&lt;/li&gt;&#xA;&lt;li&gt;Only blog posts (no auxiliary pages)&lt;/li&gt;&#xA;&lt;li&gt;Proper RSS icon linking to the correct feed URL&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;While this took more work than I expected, I&amp;rsquo;m happy with the result. My readers can now enjoy my full articles directly in their RSS readers, which is exactly what I wanted.&lt;/p&gt;&#xA;&lt;p&gt;The whole process taught me quite a bit about Hugo&amp;rsquo;s RSS system and reminded me that even seemingly simple features can require diving deeper into a framework&amp;rsquo;s internals than you might expect.&lt;/p&gt;&#xA;&lt;p&gt;Let me know in the comments if you&amp;rsquo;ve had similar experiences setting up RSS feeds, or if you have any questions about the process!&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>How I add tags to the posts</title>
      <link>https://www.mildlyjournaling.com/posts/add-tags/</link>
      <pubDate>Mon, 17 Feb 2025 11:03:03 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/add-tags/</guid>
      <description>&lt;p&gt;I added tags to my posts so that each post has its own set of tags to give you an idea what the content is about. It looks like this at the bottom of the post:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.mildlyjournaling.com/tags_screenshot.png&#34; alt=&#34;Tags in a post&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In fact, Hugo has tags support by default. The system is called &lt;a href=&#34;https://gohugo.io/content-management/taxonomies/&#34;&gt;Taxonomies&lt;/a&gt;. It allows users to freely define categorizations that can be used to classify the content. For example, if my blog is movie reviews, then I can create a Taxonomy called genre, and label each post based on the type of the movie it reviews. The good news is Hugo creates a Taxonomy called &lt;code&gt;tags&lt;/code&gt; already for users (as well as &lt;code&gt;categorization&lt;/code&gt;). To add tags to a post, I just need to put them in the front matter of the post. The code below shows the front matter of this post with tags added:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;+++&#xA;date = &amp;#39;2025-02-16T20:00:01-08:00&amp;#39;&#xA;draft = true&#xA;title = &amp;#39;I add tags to the posts&amp;#39;&#xA;tags = [&amp;#39;howto&amp;#39;, &amp;#39;blog-setup&amp;#39;, &amp;#39;tags&amp;#39;]&#xA;+++&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With tags on each post, there are 2 more features I can add. The first one is to list all tags used in my blog, and it looks like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.mildlyjournaling.com/taxonomy_list_screenshot.png&#34; alt=&#34;A page showing all tags created&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To enable this, I simply add &lt;a href=&#34;https://gohugo.io/templates/taxonomy/&#34;&gt;this template&lt;/a&gt; provided by Hugo to my site at &lt;code&gt;my-hugo-site/layouts/_default/taxonomy.html&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Another one is to show all the posts that use a particular tag when someone clicks a tag in the post, and it looks like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.mildlyjournaling.com/term_page_screenshot.png&#34; alt=&#34;A page showing all posts use this tag&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To enable this, I add &lt;a href=&#34;https://gohugo.io/templates/term/&#34;&gt;another Hugo template&lt;/a&gt; to my site as a file at &lt;code&gt;my-hugo-site/layouts/_default/term.html&lt;/code&gt;. A &lt;code&gt;term&lt;/code&gt; means a key or an item of a certain taxonomy - in the &lt;code&gt;tags&lt;/code&gt; taxonomy, it means a tag.&lt;/p&gt;&#xA;&lt;p&gt;One issue I notice after setting everything up is the link of each tag in a post is wrong. It should look like &lt;code&gt;{my-website-url}/tags/{the-tag-name}&lt;/code&gt;, so that when someone clicks it it takes them to the &lt;code&gt;term&lt;/code&gt; page I add above. Instead, it looks like &lt;code&gt;{my-website-url}posts/{this-post}/tags/{the-tag-name}&lt;/code&gt;, resulting a &lt;code&gt;page not found (404)&lt;/code&gt; error if I click it. The root cause is in the Hugo theme I use. In its post template, it uses &lt;code&gt;tags/{the-tag-name}&lt;/code&gt; as the hyperlink instead of &lt;code&gt;/tags/{the-tag-name}&lt;/code&gt;: the former is always treated as the postfix to be appended to the &lt;strong&gt;current URL&lt;/strong&gt; (the post link), while the latter to the root URL (my website url). Adding the forward slash fixes the issue.&lt;/p&gt;&#xA;&lt;p&gt;Although to fix the issue, I have to copy and paste the template in question (&lt;code&gt;my-hugo-site/themes/paper/layouts/_default/single.html&lt;/code&gt;) to my template folder (&lt;code&gt;my-hugo-site/layouts/_default/single.html&lt;/code&gt;) to modifty it so that the latter overrides the former when Hugo generates the website.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>How I give my website a name</title>
      <link>https://www.mildlyjournaling.com/posts/add-a-custom-domain/</link>
      <pubDate>Sun, 16 Feb 2025 09:56:04 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/add-a-custom-domain/</guid>
      <description>&lt;p&gt;My website has a name and a domain now, and looks like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.mildlyjournaling.com/blog_screenshot_with_name.png&#34; alt=&#34;My website has a name now&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This article talks about how I come up with the name and set up the website under the new domain.&lt;/p&gt;&#xA;&lt;p&gt;The purpose of this site is so I can write. The reason I am writing is two: 1. remember stuff for me; 2. sharing stuff I did. It is basically a journal. The consistency of journaling and writing in general is chanllenging, so I want to keep my hopes low. All in all, &amp;ldquo;Mildly Journaling&amp;rdquo; sounds like what this site intends to be.&lt;/p&gt;&#xA;&lt;p&gt;More importantly, the domain &lt;a href=&#34;https://www.mildlyjournaling.com&#34;&gt;www.mildlyjournaling.com&lt;/a&gt; is available for cheap price ($10 a year). I bought the domain and followed &lt;a href=&#34;https://developers.cloudflare.com/pages/configuration/custom-domains/&#34;&gt;this instruction&lt;/a&gt; to map the domain to my website hosted on Cloudflare Pages.&lt;/p&gt;&#xA;&lt;p&gt;To change the name of the website so the content there actually says this name, I just modify the &lt;code&gt;hugo.toml&lt;/code&gt; file in the root directory of the website files locally. Now the file looks like this:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;languageCode = &amp;#39;en-us&amp;#39;&#xA;title = &amp;#39;Mildly Journaling&amp;#39;&#xA;theme = &amp;#39;paper&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>How I set up my blog</title>
      <link>https://www.mildlyjournaling.com/posts/hello-world/</link>
      <pubDate>Thu, 13 Feb 2025 20:04:32 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/hello-world/</guid>
      <description>&lt;p&gt;I created yet another blog to write stuff. Here is what it looks like:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.mildlyjournaling.com/blog_screenshot.png&#34; alt=&#34;What does my blog look like&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This blog talks about what did I do to set it up. It is created using Hugo, and hosted on Cloudflare Pages via Github. All free.&lt;/p&gt;&#xA;&lt;p&gt;Hugo is a free tool that takes simple text I write and turns it into a blog website. Cloudflare Pages is a platform to host the actual website I create on the Internet. Github is a platform to store code (or really anything digitally), track changes and open to others for e.g. sharing and collaboration. Some basic knowledge of the three tools would make reading the following a bit easier, but not required.&lt;/p&gt;&#xA;&lt;p&gt;The rest of blog walks through the how-to step by step:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Use Hugo locally to create the blog&lt;/li&gt;&#xA;&lt;li&gt;Setup Github to host and track the Hugo files&lt;/li&gt;&#xA;&lt;li&gt;Deploy the blog to Cloudflare Pages&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;use-hugo-to-create-the-blog&#34;&gt;Use Hugo to create the blog&lt;/h2&gt;&#xA;&lt;p&gt;First of all I setup Hugo locally to create the blog. Practically speaking, it means I need to use tools Hugo provides to generate a bunch of files that are used to configure how does my site look and feel, and then another bunch of files generated based the first bunch that actually represent my website (like a HTML file of the home page). My laptop is a Macbook so I follow &lt;a href=&#34;https://gohugo.io/installation/macos/#homebrew&#34;&gt;this instruction&lt;/a&gt; to install Hugo. I then follow &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;this Hugo documentation page&lt;/a&gt; to create a new site, select a theme for the site, and create a new blog to the site, all in one folder. The folder looks roughly like below. Each subfolder &lt;a href=&#34;https://gohugo.io/getting-started/directory-structure/#site-skeleton&#34;&gt;serves its own usage&lt;/a&gt;, but for now only a few are relevant as pointed out below.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;my-hugo-site/&#xA;├── archetypes/&#xA;├── assets/&#xA;├── content/         &amp;lt;-- the actual blog content is here&#xA;│   └── posts/       &amp;lt;-- blog posts&#xA;├── data/&#xA;├── i18n/&#xA;├── layouts/&#xA;├── public/&#xA;├── static/&#xA;├── themes/          &#xA;│   └── paper/       &amp;lt;-- the theme you selected&#xA;└── hugo.toml        &amp;lt;-- the site configuration&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Besides deploying to Cloudflare Pages, it is also possible to run the blog locally on my laptop by issuing this command under the site root folder &lt;code&gt;my-hugo-site&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo server -D&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The flag &lt;code&gt;-D&lt;/code&gt; is to tell Hugo to include draft posts in the blog as well. When I create a post, by default Hugo marks it as a draft by adding the line &lt;code&gt;draft = true&lt;/code&gt; in the post. Without the flag, draft posts won&amp;rsquo;t show up as blogs in the website. Alternatively, removing that line from the post &amp;ldquo;publishes&amp;rdquo; the post and Hugo would include it automatically.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setup-github-to-host-and-track-the-blog&#34;&gt;Setup Github to host and track the blog&lt;/h2&gt;&#xA;&lt;p&gt;Practically speaking, this step puts the files of my blog somewhere on the Internet to be discoverable and readable. It also enables easy integrations with other servides such as Cloudflare Pages. It is necessary to automate the deployment to Cloudflare Pages.&lt;/p&gt;&#xA;&lt;p&gt;There is a plenty of tutorials on how to create a new repository in Github and push the local files to the repository. I won&amp;rsquo;t cover it as I didn&amp;rsquo;t do anything extra or special here. The only thing to mention is that to push to the repository hosted online at Github, I need to authenticate myself with my Github credentials. Unfortunately, Github has disabled using password as part of the credentials there - one has to use either &lt;a href=&#34;https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens&#34;&gt;an access token&lt;/a&gt; or rely on special tools like Github command line tool. This is quite complex.&lt;/p&gt;&#xA;&lt;h2 id=&#34;deploy-the-blog-to-cloudflare-pages&#34;&gt;Deploy the blog to Cloudflare Pages&lt;/h2&gt;&#xA;&lt;p&gt;One might wonder: didn&amp;rsquo;t we already use Github to host the blog, why do we need this step? Github is more of a file storage, if you will, with other features such as collaboration and version tracking. It requires a computer to process the blog files and render them into a website when visitors come. That is what Cloudflare Pages does.&lt;/p&gt;&#xA;&lt;p&gt;Cloudflare Pages supports integrating with Github such that every time there&amp;rsquo;s a new change in the Github repository (that I push in from my local version), it automatically fetches all the file and deloy them again, ensuring the website it renders always stays at the latest.&lt;/p&gt;&#xA;&lt;p&gt;I follow the instruction &lt;a href=&#34;https://developers.cloudflare.com/pages/framework-guides/deploy-a-hugo-site/&#34;&gt;here&lt;/a&gt; provided by Cloudflare. Steps are straightfoward except one thing: remember to remove the line &lt;code&gt;baseurl = &amp;quot;https://example.com&amp;quot;&lt;/code&gt; from the &lt;code&gt;hugo.toml&lt;/code&gt; configuration file. This line is automatically generated when I generate the site, but is wrong because it points to a fake website as an example. This is supposed to tell Hugo the full URL of the website for various purpose. Removing it does not hurt the basic functionality, and I can add it back when I do have an actual URL/domain for my blog.&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s it! I have a blog again.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Features of this website as of 2/17/2025</title>
      <link>https://www.mildlyjournaling.com/posts/blog-features/</link>
      <pubDate>Mon, 10 Feb 2025 16:44:37 -0800</pubDate>
      <guid>https://www.mildlyjournaling.com/posts/blog-features/</guid>
      <description>&lt;p&gt;I want a place to track notable features of this website for reference. This post will be a bit different from others, as it will get periodically updated as this website gets more features.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2/17/2025 &lt;a href=&#34;https://www.mildlyjournaling.com/posts/add-tags&#34;&gt;tags per post, tag page&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2/16/2025 &lt;a href=&#34;https://www.mildlyjournaling.com/posts/add-a-custom-domain&#34;&gt;custom domain&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
  </channel>
</rss>